{"version":3,"sources":["components/Header.js","components/Leftcolumn.js","components/AppCard.js","components/ClockCard.js","components/CalendarCard.js","components/AppHeader.js","components/Rightcolumn.js","components/RedditCard.js","components/App.js","components/RedditColumn.js","components/RedditApp.js","components/AnimeCard.js","components/SeasonColumn.js","components/SeasonApp.js","components/CharacterCard.js","components/AnimeDetailColumn.js","components/AnimeDetail.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Leftcolumn","props","title","subtitle","AppCard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","appcardimage","image","appcardtitle","Col","sm","link","src","React","Component","ClockCard","time","Date","toLocaleTimeString","_this2","intervalID","setInterval","tick","clearInterval","setState","AppHeader","headertitle","Rightcolumn","Row","components_ClockCard","Container","components_AppHeader","components_AppCard","RedditCard","content","RedditColumn","handleChange","e","list","console","log","target","value","filter","toLowerCase","li","animelist","i","length","txtValue","indexOf","push","searchlist","redditlist","pageHeader","axios","get","then","resp","data","children","catch","error","placeholder","onKeyUp","map","id","components_RedditCard","RedditApp","components_Header","lg","components_Leftcolumn","components_RedditColumn","AnimeCard","appCardTitle","appWatchStatus","watch_status","alt","1","2","0","AnimeColumn","handleSearchInputChange","searchTitle","searchAnimeKeyword","handleSearchChange","searchStatusKeyword","handleSearchStatusChange","status","parseInt","titleFilter","watchStatusFilter","forEach","lists","includes","watching_status","handleUserSearchChange","searchUser","handleSubmitSearch","preventDefault","concat","anime","userSearched","headerText","class","onSubmit","type","onChange","components_AnimeCard","key","mal_id","image_url","SeasonApp","SeasonColumn","CharacterCard","EpisodeList","animedetail","studiodetail","characterdetail","studios","characters","synopsis","score","premiered","name","components_CharacterCard","AnimeDetail","AnimeDetailColumn","match","params","Boolean","window","location","hostname","routing","BrowserRouter","basename","process","Route","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04ccd692.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return (\n        <div className=\"header-bar\">\n            <Link to=\"/\">\n                <h1 className=\"header-title\">\n                    Weeb Portal\n                </h1>\n            </Link>\n            \n        </div>\n        \n    );\n};\n\nHeader.propTypes = {\n    message: PropTypes.string\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Leftcolumn = (props) => {\n    return (\n        <div className=\"left-bar\">\n            <h2 className=\"left-bar-text-title\">\n                { props.title }\n            </h2>\n            <p> { props.subtitle } </p>\n        </div>\n        \n    );\n};\n\nLeftcolumn.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default Leftcolumn;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Button , Container , Row , Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass AppCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n\n        };\n    }\n\n    handleClick(){\n\n    }\n\n    render(){\n        const appcardimage= this.props.image;\n        const appcardtitle= this.props.title;\n        return (\n            <Col sm>\n                <Link to={this.props.link}>\n                    <div className=\"appcard half-width\">\n                        <img src={appcardimage} className=\"appcard-image\" />\n                        <h4 className=\"appcard-title\">{appcardtitle}</h4>\n                    </div>\n                </Link>\n            </Col>\n        );\n    }\n}\n\nAppCard.propTypes = {\n\n};\n\nexport default AppCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Button , Container , Row , Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass ClockCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            time: new Date().toLocaleTimeString('it-IT')\n        };\n    }\n\n    componentDidMount(){\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.intervalID);\n    }\n\n    tick() {\n        this.setState({\n            time : new Date().toLocaleTimeString('it-IT')\n        });\n    }\n\n    render(){\n        return (\n            <div>\n                <p className=\"clock-text\">{this.state.time}</p>\n            </div>\n        );\n    }\n}\n\nClockCard.propTypes = {\n\n};\n\nexport default ClockCard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Button , Container , Table , Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass CalendarCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            date: []\n        };\n    }\n\n    componentDidMount(){\n    }\n    render(){\n        return (\n            <div>\n                <h4 className=\"schedule-title\">Weeb Portal!</h4>\n            </div>\n        );\n    }\n}\n\nCalendarCard.propTypes = {\n\n};\n\nexport default CalendarCard;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AppHeader extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n\n        };\n    }\n\n    handleClick(){\n        \n    }\n\n    render(){\n        return (\n            <div className=\"app-list-header\">\n                <h3 className=\"app-list-title\">{this.props.headertitle}</h3>\n            </div>\n        );\n    }\n}\n\nAppHeader.propTypes = {\n    headertitle: PropTypes.string\n};\n\nexport default AppHeader;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport AppCard from './AppCard';\nimport ClockCard from './ClockCard';\nimport CalendarCard from './CalendarCard';\nimport { Container , Row, Col } from 'react-bootstrap';\nimport AppHeader from './AppHeader';\n\nconst Rightcolumn = (props) => {\n    return (\n        <div className=\"right-column\">\n            <div className=\"top-bar\">\n                <Row>\n                    <Col sm>\n                        <h1 className=\"top-bar-text\">Welcome <br/>Home</h1>\n                        <ClockCard />\n                    </Col>\n                </Row>\n                \n                \n            </div>\n            <Container>\n                <AppHeader headertitle={ props.headertitle } />\n                <Row>\n                    <AppCard title=\"Watched Anime\" image=\"/images/seasonanime.png\" link=\"/watched-anime\" />\n                </Row>\n\n            </Container>\n        </div>\n    );\n};\n\nRightcolumn.propTypes = {\n    message: PropTypes.string\n};\n\nexport default Rightcolumn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass RedditCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n\n        };\n    }\n\n    handleClick(){\n\n    }\n\n    render(){\n        return (\n            <Col sm=\"12\">\n                <Link to=\"/animedb/\">\n                    <div className=\"listcard\">\n                        <h4 className=\"animecard-title\">{this.props.title}</h4>\n                        <h4 className=\"animecard-title\">{this.props.content}</h4>\n                    </div>\n                </Link>\n            </Col>\n        );\n    }\n}\n\nRedditCard.propTypes = {\n    image: PropTypes.string\n};\n\nexport default RedditCard;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header.js';\nimport Leftcolumn from './Leftcolumn.js';\nimport Rightcolumn from './Rightcolumn.js';\nimport { Row , Col } from 'react-bootstrap';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"App-background\">\n          <Rightcolumn headertitle=\"What do you want to do?\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport RedditCard from './RedditCard';\nimport { Container , Row, Col } from 'react-bootstrap';\nimport AppHeader from './AppHeader';\nimport axios from 'axios';\nimport { connect } from 'net';\n\n\nclass RedditColumn extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            redditlist: [],\n            searchlist: [],\n            pageHeader:\"r/anime\"\n        };\n\n    }\n\n    componentDidMount(){\n        axios.get('https://reddit.com/r/anime/.json')\n            .then(resp => {\n                this.setState({\n                    redditlist: resp.data.data.children,\n                    searchlist: resp.data.data.children\n                });\n                console.log(\"Successful\")\n                console.log(this.state.searchlist);\n            })\n            .catch(console.error);\n    }\n\n    handleChange = (e) => {\n        var list=[];\n        console.log(e.target.value);\n        var filter=e.target.value.toLowerCase();\n        var li = this.state.animelist;\n        for (var i = 0; i < li.length; i++) {\n            var txtValue = li[i];\n            if (txtValue.toLowerCase().indexOf(filter) > -1) {\n                list.push(txtValue);\n            } \n            console.log(list);\n            this.setState({\n                searchlist: list\n            });\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"right-column\">\n                <Container>\n                    <AppHeader headertitle={this.state.pageHeader} />\n                    <input placeholder=\"Search Anime\" className=\"search-input\" onKeyUp={this.handleChange} />\n                    <Row>\n                        {this.state.searchlist.map((content, id) =>\n                            <RedditCard title={content.data.title} />\n                        )}\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nRedditColumn.propTypes = {\n    \n};\n\nexport default RedditColumn;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header.js';\nimport Leftcolumn from './Leftcolumn';\nimport RedditColumn from './RedditColumn';\nimport { Row , Col } from 'react-bootstrap';\n\n\nclass RedditApp extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"App-background\">\n          <Row className=\"App-body\">\n            <Col lg={3}><Leftcolumn title=\"Reddit Viewer\" /></Col>\n            <Col lg={8}><RedditColumn /></Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RedditApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass AnimeCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n\n        };\n    }\n\n    handleClick(){\n\n    }\n\n    render(){\n        const appCardTitle= this.props.title;\n        const appWatchStatus = this.props.watch_status;\n        const watchingStatusMap = {1:'Watching', 2:'Completed', 0:'Dropped'};\n        return (\n            <Col sm>\n                <Link to={this.props.link}>\n                    <div className=\"animecard\">\n                        <img alt={appCardTitle} src={this.props.image} className=\"animecard-image\" />\n                        <div className='statuscard'>\n                            <h4 className=\"animecard-title\">{watchingStatusMap[appWatchStatus]}</h4>\n                        </div>\n                        <h4 className=\"animecard-title\">{appCardTitle}</h4>\n                    </div>\n                </Link>\n            </Col>\n        );\n    }\n}\n\nAnimeCard.propTypes = {\n    image: PropTypes.string\n};\n\nexport default AnimeCard;","import React from 'react';\nimport AnimeCard from './AnimeCard';\nimport { Container , Row, Col } from 'react-bootstrap';\nimport AppHeader from './AppHeader';\nimport axios from 'axios';\n\n\nclass AnimeColumn extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            animelist: [],\n            searchlist: [],\n            pageHeader:\"This is your anime list\",\n            searchUser: '',\n            searchAnimeKeyword: '',\n            userSearched: 'rec_light',\n            searchStatusKeyword: [0, 1, 2, 3]\n        };\n\n    }\n\n    \n    \n    componentDidMount(){\n        axios.get('https://api.jikan.moe/v3/user/Rec_light/animelist')\n            .then(resp => {\n                this.setState({\n                    animelist: resp.data.anime,\n                    searchlist: resp.data.anime\n                });\n            })\n            .catch(console.error);\n    }\n\n    handleSearchInputChange = (e) => {\n        let searchTitle = e.target.value.toLowerCase();\n        this.setState({\n            searchAnimeKeyword: searchTitle\n        });\n\n        this.handleSearchChange(searchTitle, this.state.searchStatusKeyword);\n    }\n\n    handleSearchStatusChange = (e) => {\n        let status = [];\n        if(e.target.value === \"0\"){\n            status = [0, 1, 2, 3];\n        }\n        else{\n            status = [parseInt(e.target.value)];\n        }\n\n        this.setState({\n            searchStatusKeyword:status\n        });\n\n        this.handleSearchChange(this.state.searchAnimeKeyword, status);\n    }\n\n    handleSearchChange = (searchAnimeKeyword, searchStatusKeyword) => {\n        var list=[];\n        var titleFilter=searchAnimeKeyword;\n        var watchStatusFilter = searchStatusKeyword;\n        var li = this.state.animelist;\n\n        li.forEach(function(lists){\n            if(watchStatusFilter.includes(lists.watching_status) && lists.title.toLowerCase().indexOf(titleFilter) > -1) {\n                list.push(lists);\n            }\n        });\n\n        this.setState({\n            searchlist: list\n        });\n    }\n\n    handleUserSearchChange = (e) => {\n        this.setState({\n            searchUser: e.target.value\n        });\n    }\n\n    handleSubmitSearch = (e) => {\n        e.preventDefault();\n        axios.get(`https://api.jikan.moe/v3/user/${this.state.searchUser}/animelist`)\n        .then(resp => {\n            this.setState({\n                animelist: resp.data.anime,\n                searchlist: resp.data.anime,\n                userSearched: this.state.searchUser\n            });\n        })\n        .catch(console.error);\n    }\n\n    render(){\n        let headerText = `This is ${this.state.userSearched}'s anime list`\n\n        return (\n            <div className=\"right-column\">\n                <Container>\n                    <AppHeader headertitle={headerText} />\n                    <div class=\"search-container\">\n                        <form onSubmit={this.handleSubmitSearch}>\n                            <input placeholder=\"Enter Your Username\" className=\"search-input\" onKeyUp={this.handleUserSearchChange} />\n                            <button type='submit'>Search</button>\n                        </form>\n                    </div>\n                    <hr/>\n                    <div class=\"search-container\">\n                        <input placeholder=\"Search Anime\" className=\"search-input\" onKeyUp={this.handleSearchInputChange} />\n                        <select onChange={this.handleSearchStatusChange}>\n                            <option value='0'>All status</option>\n                            <option value='1'>Watching</option>\n                            <option value='2'>Completed</option>\n                            <option value='3'>Dropped</option>\n                        </select>\n                    </div>\n                    <hr/>\n                    <Row>\n                        {this.state.searchlist.map((content, id) =>\n                            <AnimeCard key={content.mal_id} title={content.title} image={content.image_url} link={\"/anime/\"+content.mal_id} watch_status={content.watching_status} />\n                        )}\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nAnimeColumn.propTypes = {\n    \n};\n\nexport default AnimeColumn;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header.js';\nimport Leftcolumn from './Leftcolumn';\nimport SeasonColumn from './SeasonColumn';\nimport { Row , Col } from 'react-bootstrap';\n\n\nclass SeasonApp extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"App-background\">\n          <Row className=\"App-body\">\n            <Col lg={3}><Leftcolumn title=\"Your MAL List\" subtitle=\"My username is rec_light, enjoy my list\"/></Col>\n            <Col lg={8}><SeasonColumn /></Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SeasonApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass CharacterCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n\n        };\n    }\n\n    handleClick(){\n\n    }\n\n    render(){\n        const appcardtitle= this.props.title;\n        return (\n            <div className=\"animecard max-width-100\">\n                <img src={this.props.image} className=\"animecard-image\" />\n                <h4 className=\"animecard-title\">{appcardtitle}</h4>\n            </div>\n        );\n    }\n}\n\nCharacterCard.propTypes = {\n\n};\n\nexport default CharacterCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup , Container, Row, Col } from 'react-bootstrap';\nimport AppHeader from './AppHeader';\nimport CharacterCard from './CharacterCard';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass EpisodeList extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            animedetail: {},\n            studiodetail: [],\n            characterdetail: [],\n            pageHeader:props.title\n        };\n    }\n    \n    componentDidMount(){\n        axios.get(`https://api.jikan.moe/v3/anime/${this.props.id}`)\n            .then(resp => {\n                this.setState({\n                    animedetail: resp.data,\n                    studiodetail: resp.data.studios[0]\n                });\n                \n            })\n            .catch(console.error);\n            \n        axios.get(`https://api.jikan.moe/v3/anime/${this.props.id}/characters_staff`)\n            .then(resp => {\n                this.setState({\n                    characterdetail: resp.data.characters\n                });\n                \n            })\n            .catch(console.error); \n    }\n\n    render(){\n        return (\n            <div className=\"right-column\">\n                <Container>\n                    <AppHeader headertitle={this.state.animedetail.title} />\n                    <hr />\n                    <Row>\n                        <Col sm=\"4\">\n                            <img className=\"anime-detail-img\" src={this.state.animedetail.image_url}></img>\n                        </Col>\n                        <Col sm=\"8\">\n                            <p className=\"anime-detail-synopsis\">{ this.state.animedetail.synopsis }</p>\n                        </Col>\n                    </Row>\n                    <div className=\"anime-box-container\">\n                        <Row>\n                            \n                                <Col sm>\n                                    <p className=\"anime-box-text\">Score: {this.state.animedetail.score}</p>\n                                </Col>\n                                <Col sm>\n                                    <p className=\"anime-box-text\">Season: {this.state.animedetail.premiered}</p>\n                                </Col>\n                                <Col sm>\n                                    <p className=\"anime-box-text\">Studio:\n                                        {this.state.studiodetail.name}\n                                     </p>\n                                </Col>\n                        </Row>\n                    </div>\n                    <div className=\"scrolling-wrapper\">\n                        {this.state.characterdetail.map((content, id) =>\n                            <CharacterCard image={content.image_url} title={content.name}></CharacterCard>\n                        )}\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nEpisodeList.propTypes = {\n    title: PropTypes.string\n};\n\nexport default EpisodeList;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header.js';\nimport Leftcolumn from './Leftcolumn';\nimport AnimeDetailColumn from './AnimeDetailColumn';\nimport { Row , Col } from 'react-bootstrap';\n\n\nclass AnimeDetail extends Component {\n    constructor(props){\n        super(props);\n        \n    }\n\n    \n\n    render() {\n        return (\n        <div>\n            <Header />\n            <div className=\"App-background\">\n            <Row className=\"App-body\">\n                <Col lg={3}><Leftcolumn title=\"Anime Detail\" /></Col>\n                <Col lg={8}><AnimeDetailColumn id={ this.props.match.params.id } /></Col>\n            </Row>\n            </div>\n        </div>\n        );\n  }\n}\n\nexport default AnimeDetail;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport RedditApp from './components/RedditApp';\nimport SeasonApp from './components/SeasonApp';\nimport AnimeDetail from './components/AnimeDetail';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nconst routing = (\n    <Router basename={process.env.PUBLIC_URL}>\n        <div>\n            <Route exact path=\"/\" component={SeasonApp} />\n            <Route exact path=\"/reddit\" component={RedditApp} />\n            <Route exact path=\"/watched-anime\" component={SeasonApp} />\n            <Route exact path=\"/anime/:id\" component={AnimeDetail} />\n        </div>\n    </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}